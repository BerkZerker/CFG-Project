# All card's timers start as soon as they would be able to do their action.
Cards can be played in one of the 3 lanes, and will move up in the queue as 
space allows. Once they have done their action they will be discarded and
added back to the bottom of the deck. 

# I need a way to condence the cards in the lanes, but make it so that you
can hold down on a specific card so as to view it. -> This also means I'll
want all necessary info about the cards on the top (cost could go on bottom)
so that they would be easily visible.

# I'll make action funcs in the lane class (think "damage(value)") and then call
them from the card's action func "laneRef.damage(self.damage)"

# i may need a 2nd timer for how long the actual action takes.
figure out how cards will handle these two timers (if I use them)

# Figure out how to handle lane animations. (4 signals sent to the lane class) (valid, invalid, hovered on, hovered off)
(white highlight for current, red for invalid)

# Clean up code (look at debugger)

# balancing notes:
	ready_time and damage are inversely proportional
	cost and "value" are proportional
	(ik i spelled those wrong I just don't care)
